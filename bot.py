import logging
import os
from typing import Union
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import openai

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

chat_histories = {}

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

def get_chat_history(chat_id: Union[int, str]):
    return chat_histories.setdefault(chat_id, [])

def handle_response(chat_id: Union[int, str], text: str) -> str:
    chat_history = get_chat_history(chat_id)
    user_message = {"role": "user", "content": text}
    chat_history.append(user_message)

    messages = [
        {
            "role": "system",
            "content": "–¢—ã ‚Äî –≥–æ–ø–Ω–∏–∫ –∏–∑ 90-—Ö, –∫–æ—Ç–æ—Ä—ã–π –∂–∏–ª –≤ –†–æ—Å—Å–∏–∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è, –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞–≥–ª–æ –∏ –Ω–µ–æ—Ö–æ—Ç–Ω–æ.",
        }
    ] + chat_history

    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=messages,
        temperature=0.8,
        max_tokens=300
    )

    bot_response = response["choices"][0]["message"]["content"]
    chat_history.append({"role": "assistant", "content": bot_response})
    return bot_response

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø —á–µ—Ä—Ç–æ–≤ –±–æ—Ç –Ω–∞ GPT-4o–±–ª—è. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏ –æ—Ç–≤–∞–ª–∏!")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å ü§ñ")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_input = update.message.text
    bot_reply = handle_response(chat_id, user_input)
    await update.message.reply_text(bot_reply)

if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
