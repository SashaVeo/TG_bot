import logging
import os
from typing import Union
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import openai

# === –¢–æ–∫–µ–Ω—ã ===
TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
openai.api_key = os.environ.get("OPENAI_API_KEY")

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
chat_histories = {}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

def get_chat_history(chat_id: Union[int, str]):
    return chat_histories.setdefault(chat_id, [])

# –û—Ç–≤–µ—Ç –æ—Ç GPT-4o
def handle_response(chat_id: Union[int, str], text: str) -> str:
    history = get_chat_history(chat_id)
    history.append({"role": "user", "content": text})

    messages = [{"role": "system", "content": "–¢—ã ‚Äî –≥–æ–ø–Ω–∏–∫ –∏–∑ 90-—Ö, –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞–≥–ª–æ –∏ –Ω–µ–æ—Ö–æ—Ç–Ω–æ."}] + history

    response = openai.chat.completions.create(
        model="gpt-4o",
        messages=messages
    )

    bot_reply = response.choices[0].message.content
    history.append({"role": "assistant", "content": bot_reply})
    return bot_reply

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –Ω–∞ GPT-4o. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, –≥–∞–≤–Ω—é–∫.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ ‚Äî —è –æ—Ç–≤–µ—á–∞—é.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_input = update.message.text
    bot_reply = handle_response(chat_id, user_input)
    await update.message.reply_text(bot_reply)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
